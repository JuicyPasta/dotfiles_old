
"""""""""""""""""""""""""""""
" General Keyboard Mappings "
"""""""""""""""""""""""""""""

inoremap jk <ESC>

" your new leader
let mapleader = "\<Space>"
let g:mapleader = "\<Space>"

" F7 reindents the entire file
map <F7> mzgg=G`z

" highlight last inserted text
nnoremap gV `[v`]

" quickly save
nmap <leader>w :w!<cr>

" common mistake fix
map q: :q

" toggles line numbers
nmap <leader>ln :set nu!<cr>

" easier split pane navigations
"nnoremap <C-J> <C-W><C-J>
"nnoremap <C-K> <C-W><C-K>
"nnoremap <C-L> <C-W><C-L>
"nnoremap <C-H> <C-W><C-H>

" jump to end of line you pasted
vnoremap <silent> y y`]
vnoremap <silent> p p`]
nnoremap <silent> p p`]

" press * and # to search words visually selected
vnoremap <silent> * :call VisualSelection('f')<CR>
vnoremap <silent> # :call VisualSelection('b')<CR>

" Return to last edit position when opening files
autocmd BufReadPost *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \   exe "normal! g`\"" |
            \ endif

" Remember info about open buffers on close
set viminfo^=%

" copy/paste fix
set clipboard=unnamed


"""""""""""""""""""
" Behavior Tweaks "
"""""""""""""""""""

" Add a bit extra margin to the left
set foldcolumn=1 

" Sets how many lines of history VIM has to remember
set history=500 

" Sets tabs and indentation to be 4 spaces
set tabstop=4
set shiftwidth=4

" tabs are spaces
set expandtab
set smarttab
set lbr
set tw=500
set ai
set si
set wrap

" make backspace normal
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Set to auto read when a file is changed from the outside
set autoread 

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

" Ignore case when searching
set ignorecase 

" When searching try to be smart about cases
set smartcase 

" Highlight search results
set hlsearch 

" Makes search act like search in modern browsers
set incsearch 

" Don't redraw while executing macros (good performance config)
set lazyredraw 

" For regular expressions turn magic on
set magic 

" Show matching brackets when text indicator is over them
set showmatch 

" How many tenths of a second to blink when matching brackets
set mat=2 

" Enable filetype plugins
filetype plugin on
filetype indent on

" Avoid garbled characters in Chinese language windows OS
let $LANG='en'
set langmenu=en
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

" Ignore compiled files
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
else
    set wildignore+=.git\*,.hg\*,.svn\*
endif

" split panes like you read books
set splitbelow
set splitright

" we dont really need backups
set nobackup
set nowb
set noswapfile

" deletes trailing white space when you save
func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal `z"
endfunc
autocmd BufWrite *.py :call DeleteTrailingWS()
autocmd BufWrite *.coffee :call DeleteTrailingWS()

" no more automatic comment inserting
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

            

"""""""""""""
" UI Config "
"""""""""""""

" shows line numbers
set nonumber 

" show command in bottom bar
set showcmd 

" highlights current line
set cursorline 

" autocomplete for command menu
set wildmenu 

" only redraw when necessary
set lazyredraw 

" highlight matching {}
set showmatch 

" search as characters are entered
set incsearch 

" highlight matches
set hlsearch 

syntax on
set encoding=utf-8

" Height of the command bar
set cmdheight=1

" short for 'showmode'
set nosmd   

" short for 'ruler'
set noru    

" A buffer becomes hidden when it is abandoned
set hid

if has("gui_running")
    set guioptions-=T
    set guioptions+=e
    set t_Co=256
    set guitablabel=%M\ %t
endif

" enables syntax processing
syntax enable 

" solarized fix for OSX
if !has("gui_running")
    let g:solarized_termtrans=1
    let g:solarized_termcolors=256
endif

" enable solarized
colorscheme solarized
set background=dark
